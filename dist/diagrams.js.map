{"version":3,"sources":["webpack:///webpack/bootstrap 9fe626b90cc41e05f385","webpack:///./src/js/main.js","webpack:///./src/js/diagrams.js","webpack:///./src/js/utils.js","webpack:///./src/js/shared.js","webpack:///./src/js/shapes.js","webpack:///./src/js/svg.js","webpack:///./src/js/getDiagramClass.js","webpack:///./src/js/diagrams ^\\.\\/.*\\/index$","webpack:///./src/js/diagrams/Box/index.js","webpack:///./src/js/diagrams/Graph/index.js","webpack:///./src/js/diagrams/Graph/helpers.js","webpack:///./src/js/diagrams/Layer/index.js","webpack:///./src/js/diagrams/Layer/helpers.js"],"names":[],"mappings":"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","file":"diagrams.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9fe626b90cc41e05f385\n **/","import d from 'diagrams'\n\nd.utils = require('utils')\nd.events = d.utils.createAnEventEmitter()\nd.shared = require('shared')\nd.shapes = require('shapes')\nd.svg = require('svg')\nd.Diagram = require('getDiagramClass')()\n\n_.each([\n  'Box', 'Graph', 'Layer',\n], diagramName => require(`diagrams/${diagramName}/index`)())\n\nwindow.diagrams = d\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/main.js\n **/","export default {}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/diagrams.js\n **/","const utils = {\n  applySimpleTransform(el) {\n    el.attr('transform', d => `translate(${d.x},${d.y})`)\n  },\n\n  codeBlockOfLanguageFn(language, commentsSymbol = '') {\n    return function(codeBlock, where, withInlineStrs) {\n      if (withInlineStrs === true) {\n        codeBlock = `${commentsSymbol} ...\\n${codeBlock}\\n${commentsSymbol} ...`\n      }\n\n      if (_.isString(where)) codeBlock = `${commentsSymbol} @${where}\\n${codeBlock}`\n\n      return `\\`\\`${language}\\`\\`${codeBlock}\\`\\``\n    }\n  },\n\n  composeWithEventEmitter(constructor) {\n    let _subjects = {}\n    const createName = name => `$${name}`\n    const dispose = (prop) => {\n      if ({}.hasOwnProperty.call(_subjects, prop)) {\n        _subjects[prop].dispose()\n        _subjects[prop] = null\n      }\n    }\n\n    constructor.prototype.emit = function(name, data) {\n      const fnName = createName(name)\n\n      _subjects[fnName] = _subjects[fnName] || new Rx.Subject()\n      _subjects[fnName].onNext(data)\n    }\n\n    constructor.prototype.listen = function(name, handler) {\n      const fnName = createName(name)\n\n      _subjects[fnName] = _subjects[fnName] || new Rx.Subject()\n\n      return _subjects[fnName].subscribe(handler)\n    }\n\n    constructor.prototype.unlisten = function(name) {\n      const fnName = createName(name)\n\n      dispose(fnName)\n    }\n\n    constructor.prototype.dispose = function() {\n      for (const prop in _subjects) dispose(prop)\n\n      _subjects = {}\n    }\n  },\n\n  createAnEventEmitter() {\n    const constructor = function EventEmitter() {}\n\n    utils.composeWithEventEmitter(constructor)\n\n    return new constructor()\n  },\n\n  d3DefaultReturnFn(props, preffix, suffix) {\n    props = props.split('.')\n\n    return (d) => {\n      const position = _.reduce(props, (memo, property) => memo[property], d)\n\n      return (preffix || suffix) ? preffix + position + suffix : position\n    }\n  },\n\n  dataFromGeneralToSpecificForATreeStructureType(generalData) {\n    // FPN: Find Parent Node\n    let FPNRecursiveFailed = false\n    const itemsIdToItemsMap = {}\n    const nodesData = {}\n    const findParentNodeFn = () => {\n      let itemsChecked\n      const itemsIdToFromConnectionMap = {}\n      const FPNRecursiveFn = (item) => {\n        let connection, parentItemId, parentItem\n\n        if (itemsChecked.indexOf(item) > -1) {\n          FPNRecursiveFailed = true\n\n          return\n        } else itemsChecked.push(item)\n\n        if (_.isUndefined(itemsIdToFromConnectionMap[item.id]) === false) {\n          connection = itemsIdToFromConnectionMap[item.id]\n        } else {\n          connection = _.where(generalData.connections, {\n            from: item.id,\n          })\n          itemsIdToFromConnectionMap[item.id] = connection\n        }\n\n        if (connection.length === 0) {\n          if (parentNode) {\n            if (parentNode.id !== item.id) FPNRecursiveFailed = true\n          } else parentNode = item\n        } else if (connection.length === 1) {\n          parentItemId = connection[0].to\n\n          if (_.isUndefined(itemsIdToItemsMap[parentItemId]) === false) {\n            parentItem = itemsIdToItemsMap[parentItemId]\n          } else {\n            parentItem = _.where(generalData.items, {\n              id: parentItemId,\n            })[0]\n            itemsIdToItemsMap[parentItemId] = parentItem\n          }\n          FPNRecursiveFn(parentItem)\n        } else FPNRecursiveFailed = true\n      }\n\n      _.each(generalData.items, (item) => {\n        if (FPNRecursiveFailed === false) {\n          itemsChecked = []\n          itemsIdToItemsMap[item.id] = item\n          FPNRecursiveFn(item)\n        }\n      })\n    }\n    const buildNodesDataRecursiveFn = (transformedData, item) => {\n      let text, children\n\n      transformedData.id = item.id\n      text = item.name\n\n      if (item.description) text += `: ${item.description}`\n      transformedData.text = text\n\n      children = _.where(generalData.connections, {\n        to: item.id,\n      })\n\n      if (children.length > 0) {\n        transformedData.items = []\n        _.each(children, (child) => {\n          transformedData.items.push({})\n          buildNodesDataRecursiveFn(_.last(transformedData.items), itemsIdToItemsMap[child.from])\n        })\n      }\n    }\n    let parentNode\n\n    findParentNodeFn()\n\n    if (FPNRecursiveFailed) {\n      alert('The data structure is not suitable for this diagram')\n\n      return []\n    } else {\n      buildNodesDataRecursiveFn(nodesData, parentNode)\n\n      return nodesData\n    }\n  },\n\n  formatShortDescription(text) {\n    text = text.replace(/<p>/g, '')\n    text = text.replace(/<br>/g, ' ')\n    text = text.replace(/<\\/p>/g, '. ')\n    text = utils.replaceCodeFragmentOfText(text, ({ codeBlock, matchStr }) => {\n      if (matchStr === text && /\\n/.test(matchStr) === false) return codeBlock\n      else {\n        return ' <CODE...>'\n      }\n    })\n\n    return text\n  },\n\n  formatTextFragment(text) {\n    const tagsToEncode = ['strong', 'code', 'pre', 'br', 'span', 'p']\n    const encodeOrDecodeTags = (action, tag) => {\n      const encodeOrDecodeTagsWithAction = _.partial(encodeOrDecodeTags, action)\n      const beginningTagArr = [\n        `<${tag}(.*?)>`,\n        `<${tag}$1>`,\n        `${tag}DIAGSA(.*?)DIAGSB${tag}DIAGSC`,\n        `${tag}DIAGSA$1DIAGSB${tag}DIAGSC`,\n      ]\n      const endingTagReal = `</${tag}>`\n      const endingTagFake = `${tag}ENDREPLACEDDIAGRAMS`\n      const endingTagArr = [endingTagReal, endingTagReal, endingTagFake, endingTagFake]\n      const replaceText = function(from, to) {\n        text = text.replace(new RegExp(from, 'g'), to)\n      }\n\n      if (_.isArray(tag)) _.each(tag, encodeOrDecodeTagsWithAction)\n      else {\n        _.each([beginningTagArr, endingTagArr], (arr) => {\n          if (action === 'encode') replaceText(arr[0], arr[3])\n          else if (action === 'decode') replaceText(arr[2], arr[1])\n        })\n      }\n    }\n\n    text = utils.replaceCodeFragmentOfText(text,\n      ({ allMatches, codeBlock, language, matchStr }) => {\n        const lastMatch = (matchStr === _.last(allMatches))\n\n        return `<pre${(lastMatch ? ' class=\"last-code-block\" ' : '')}><code>`\n          + `${hljs.highlight(language, codeBlock).value}</pre></code>`\n      })\n\n    encodeOrDecodeTags('encode', tagsToEncode)\n    text = text.replace(/</g, '&lt;').replace(/>/g, '&gt;')\n    encodeOrDecodeTags('decode', tagsToEncode)\n\n    return text\n  },\n\n  generateATextDescriptionStr(text, description) {\n    const descriptionText = (description ? `<br>${description}` : '')\n\n    return `<strong>${text}</strong>${descriptionText}`\n  },\n\n  getUrlParams() {\n    const query_string = {}\n    const query = window.location.search.substring(1)\n    const vars = query.split(\"&\")\n\n    for (let i = 0; i < vars.length; i++) {\n      const pair = vars[i].split(\"=\")\n\n      if (typeof query_string[pair[0]] === \"undefined\") {\n        query_string[pair[0]] = decodeURIComponent(pair[1])\n      } else if (typeof query_string[pair[0]] === \"string\") {\n        const arr = [query_string[pair[0]], decodeURIComponent(pair[1])]\n\n        query_string[pair[0]] = arr\n      } else {\n        query_string[pair[0]].push(decodeURIComponent(pair[1]))\n      }\n    }\n\n    return query_string\n  },\n\n  joinWithLastDifferent(arr, separator, lastSeparator) {\n    return arr.slice(0, -1).join(separator) + lastSeparator + arr[arr.length - 1]\n  },\n\n  positionFn(props, offset) {\n    offset = offset || 0\n\n    return utils.d3DefaultReturnFn(props, 0, offset)\n  },\n\n  replaceCodeFragmentOfText(text, predicate) {\n    const codeRegex = /``([\\s\\S]*?)``([\\s\\S]*?)``/g\n    const allMatches = text.match(codeRegex)\n\n    return text.replace(codeRegex, (matchStr, language, codeBlock) => {\n      return predicate({ allMatches, codeBlock, language, matchStr })\n    })\n  },\n\n  runIfReady(fn) {\n    if (document.readyState === 'complete') fn()\n    else window.onload = fn\n  },\n\n  textFn(props, preffix, suffix) {\n    preffix = preffix || ''\n    suffix = suffix || ''\n\n    return utils.d3DefaultReturnFn(props, preffix, suffix)\n  },\n\n  // This function is created to be able to reference it in the diagrams\n  wrapInParagraph: (text) => `<p>${text}</p>`,\n}\n\nutils.commasAndAndJoin = _.partial(utils.joinWithLastDifferent, _, ', ', ' and ')\n\nexport default utils\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/utils.js\n **/","const shared = {\n  get(key) {\n    shared.throwIfSharedMethodAlreadyExists(key)\n\n    return shared[key]\n  },\n\n  getWithStartingBreakLine: () => `<br>${shared.get(...arguments)}`,\n\n  set(data) {\n    shared.throwIfSharedMethodAlreadyExists(data)\n\n    for (const prop in data) {\n      if (data.hasOwnProperty(prop)) shared[prop] = data[prop]\n    }\n  },\n\n  throwIfSharedMethodAlreadyExists(data) {\n    let keys\n\n    if (_.isObject(data)) {\n      keys = Object.keys(data)\n      _.each(keys, shared.throwIfSharedMethodAlreadyExists)\n    } else if (_.isString(data)) {\n      if (shared[methodsVarName].indexOf(data) > 0) throw new Error(`Reserved keyword: ${data}`)\n    }\n  },\n}\n\nconst methodsVarName = 'builtInMethods'\n\nshared[methodsVarName] = _.keys(shared).concat(methodsVarName)\n\nexport default shared\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/shared.js\n **/","const shapes = {\n  hexagon(opts) {\n    const halfHeight = opts.height / 2\n    const halfWidth = opts.width / 2\n    const gap = opts.widthPercent ?\n      (1 - (opts.widthPercent / 100)) * opts.width : (opts.width - opts.height) / 2\n    const center = opts.center || [halfWidth, halfHeight]\n    const [cx, cy] = center\n\n    return `M${cx - halfWidth},${cy}`\n      + `L${cx - halfWidth + gap},${cy + halfHeight}`\n      + `L${cx + halfWidth - gap},${cy + halfHeight}`\n      + `L${cx + halfWidth},${cy}`\n      + `L${cx + halfWidth - gap},${cy - halfHeight}`\n      + `L${cx - halfWidth + gap},${cy - halfHeight}`\n      + 'Z'\n  },\n}\n\nexport default shapes\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/shapes.js\n **/","import d from 'diagrams'\n\nconst addEllipsis = ({ self, text, textLength, width }) => {\n  while (textLength > width && text.length > 0) {\n    text = text.slice(0, -4)\n    self.text(`${text}...`)\n    textLength = self.node().getComputedTextLength()\n  }\n}\n\nconst appendElsToFilterColor = ({ deviation, filter, slope }) => {\n  filter.append('feOffset').attr({\n    dx: 0.5,\n    dy: 0.5,\n    in: 'SourceGraphic',\n    result: 'offOut',\n  })\n  filter.append('feGaussianBlur').attr({\n    in: 'offOut',\n    result: 'blurOut',\n    stdDeviation: deviation,\n  })\n  filter.append('feBlend').attr({\n    in: 'SourceGraphic',\n    in2: 'blurOut',\n    mode: 'normal',\n  })\n  filter.append('feComponentTransfer').append('feFuncA').attr({\n    slope,\n    type: 'linear',\n  })\n}\n\nconst svg = {\n  addFilterColor({ container, deviation, extra, id, slope }) {\n    const defs = container.append('defs')\n    const filter = defs.append('filter').attr({\n      id: `diagrams-drop-shadow-${id}`,\n    })\n\n    if (extra) filter.attr({\n      height: '500%',\n      width: '500%',\n      x: '-200%',\n      y: '-200%',\n    })\n\n    appendElsToFilterColor({ deviation, filter, slope })\n  },\n\n  addVerticalGradientFilter(container, id, colors) {\n    const defs = container.append('defs')\n    const linearGradient = defs.append('linearGradient').attr({\n      id,\n      x1: '0%',\n      x2: '0%',\n      y1: '0%',\n      y2: '100%',\n    })\n\n    linearGradient.append('stop').attr('offset', '0%').style({\n      'stop-color': colors[0],\n      'stop-opacity': 1,\n    })\n    linearGradient.append('stop').attr('offset', '100%').style({\n      'stop-color': colors[1],\n      'stop-opacity': 1,\n    })\n  },\n\n  generateSvg(style) {\n    const selector = svg.getDiagramWrapperStr()\n    const bodyDims = document.body.getBoundingClientRect()\n\n    return d3.select(selector).append('svg').attr({\n      height: 4000,\n      width: bodyDims.width - 40,\n    }).style(style)\n  },\n\n  insertInBodyBeforeSvg(tag) {\n    const diagramWrapper = svg.getDiagramWrapperStr()\n    const body = d3.select('body')\n    const elementAfterName = (diagramWrapper === 'body') ? 'svg' : diagramWrapper\n    const el = body.insert(tag, elementAfterName)\n\n    return el\n  },\n\n  textEllipsis(width) {\n    return function() {\n      const self = d3.select(this)\n      const textLength = self.node().getComputedTextLength()\n      const text = self.text()\n\n      addEllipsis({ self, text, textLength, width })\n    }\n  },\n\n  updateHeigthOfElWithOtherEl(el, otherEl, offset) {\n    el.attr({\n      height: otherEl[0][0].getBoundingClientRect().height + (offset || 0),\n    })\n  },\n}\n\nsvg.getDiagramWrapperStr = () => d.diagramsWrapperSelector || 'body'\n\nsvg.fullscreenElement = () => document.fullscreenElement\n  || document.webkitFullscreenElement\n  || document.mozFullScreenElement\n  || document.msFullscreenElement\n  || null\n\nsvg.selectScreenHeightOrHeight = height =>\n  (d.svg.fullscreenElement()) ? screen.height - 30 : height\n\nexport default svg\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/svg.js\n **/","import d from 'diagrams'\nimport svg from 'svg'\n\nconst defaultDiagramConfiguration = {}\nlet createdDiagramsMaxId = 0\n\nd.diagramsRegistry = []\n\nconst getDiagramClass = () => {\n  const Diagram = class Diagram {\n    static convertDiagram(creationId, toDiagramType) {\n      const item = Diagram.getRegistryItemWithCreationId(creationId)\n      const newArgs = item.data.slice(1)\n      let generalData, specificData\n\n      generalData = item.diagram.dataFromSpecificToGeneral.apply({}, newArgs)\n      specificData = d[toDiagramType].dataFromGeneralToSpecific.apply({}, [generalData])\n\n      d.events.emit('diagram-to-transform', item.diagram)\n\n      Diagram.removePreviousDiagrams()\n      d[toDiagramType].apply(item.diagram, [specificData])\n    }\n\n    static removePreviousDiagrams() {\n      d3.selectAll('input.diagrams-diagram-button').remove()\n      d3.select('svg').remove()\n    }\n\n    static addDivBeforeSvg() {\n      const div = svg.insertInBodyBeforeSvg('div')\n\n      div.appendButtonToDiv = function(cls, value, onclick) {\n        div.append('input').attr({\n          class: `${cls} diagrams-diagram-button btn btn-default`,\n          onclick,\n          type: 'button',\n          value,\n        })\n      }\n\n      return div\n    }\n\n    static getRegistryItemWithCreationId(creationId) {\n      const items = _.where(d.diagramsRegistry, {\n        id: creationId,\n      })\n\n      return (items.length === 1) ? items[0] : null\n    }\n\n    static getDataWithCreationId(creationId) {\n      const item = Diagram.getRegistryItemWithCreationId(creationId)\n\n      return (item) ? item.data : null\n    }\n\n    constructor(opts) {\n      const diagram = this\n      const prototype = Object.getPrototypeOf(diagram)\n\n      diagram.name = opts.name\n      diagram._configuration = opts.configuration || {}\n\n      prototype.configurationKeys = opts.configurationKeys || {}\n\n      _.each(Object.keys(opts.helpers), (helperName) => {\n        if (_.isFunction(opts.helpers[helperName])) {\n          opts.helpers[helperName] = _.bind(opts.helpers[helperName], diagram)\n        }\n      })\n      _.merge(diagram._configuration, defaultDiagramConfiguration)\n      _.each(Object.keys(diagram._configuration), (confKey) => {\n        diagram.configCheckingLocalStorage(confKey, diagram._configuration[confKey])\n      })\n      _.defaults(prototype, opts.helpers)\n      diagram.register()\n    }\n\n    reRender() {\n      return null\n    }\n\n    addMouseListenersToEl(el, data, callbacks) {\n      const diagram = this\n      const emitFn = (d3Event, emitedEvent) => {\n        emitedEvent = emitedEvent || d3Event\n        el.on(d3Event, () => {\n          diagram.emit(emitedEvent, emitContent)\n\n          if (callbacks && callbacks[d3Event]) callbacks[d3Event](emitContent)\n        })\n      }\n      const emitContent = { data, el }\n\n      emitFn('mouseleave')\n      emitFn('mouseenter')\n      emitFn('click', 'itemclick')\n    }\n\n    removePreviousAndCreate() {\n      const diagram = this\n\n      Diagram.removePreviousDiagrams()\n      diagram.addConversionButtons()\n      diagram.create(...arguments)\n    }\n\n    config(opts, optValue) {\n      const argsLength = arguments.length\n      const optsType = typeof(opts)\n      let optsKey\n\n      if (argsLength === 0) return this._configuration\n      else if (argsLength === 1) {\n        if (_.isFunction(optsType)) optsKey = opts()\n        else if (_.isString(opts)) optsKey = opts\n        else if (_.isObject(opts)) {\n          for (const key in opts) {\n            if (opts.hasOwnProperty(key)) this.config(key, opts[key])\n          }\n\n          return opts\n        }\n\n        return this._configuration[optsKey]\n      } else if (argsLength === 2) {\n        this._configuration[opts] = optValue\n\n        if (_.isObject(optValue)) this.setToLocalStorage(opts, optValue.value)\n        else this.setToLocalStorage(opts, optValue)\n\n        this.emit('configuration-changed', {\n          key: opts,\n          value: optValue,\n        })\n\n        return optValue\n      }\n    }\n\n    configCheckingLocalStorage(key, defaultValue) {\n      const diagram = this\n      const finalValue = diagram.getFromLocalStorage(key, defaultValue)\n\n      diagram.config(key, finalValue)\n    }\n\n    generateLocalStorageKeyPreffix(originalKey) {\n      return `diagramsjs-${originalKey}`\n    }\n\n    getFromLocalStorage(originalKey, defaultItem) {\n      const diagram = this\n      const getAndConvertStrBoolean = function(defaultValue) {\n        let rv = localStorage.getItem(diagram.generateLocalStorageKeyPreffix(originalKey))\n          || defaultValue\n\n        if (rv === 'false') rv = false\n        else if (rv === 'true') rv = true\n\n        return rv\n      }\n      let finalValue = defaultItem\n\n      if (localStorage && localStorage.getItem) {\n        if (_.isObject(finalValue)) {\n          finalValue.value = getAndConvertStrBoolean(finalValue.value)\n\n          if (finalValue.type) finalValue.value = finalValue.type(finalValue.value)\n        } else finalValue = getAndConvertStrBoolean(finalValue)\n      }\n\n      return finalValue\n    }\n\n    setToLocalStorage(originalKey, value) {\n      const diagram = this\n\n      if (localStorage && localStorage.setItem) {\n        return localStorage.setItem(diagram.generateLocalStorageKeyPreffix(originalKey), value)\n      }\n    }\n\n    generateEmptyRelationships(item) {\n      item.relationships = {}\n      item.relationships.dependants = []\n      item.relationships.dependencies = []\n    }\n\n    addDependantRelationship(item, el, data) {\n      item.relationships.dependants.push(this.generateRelationship(el, data))\n    }\n\n    addSelfRelationship(item, el, data) {\n      item.relationships.self = this.generateRelationship(el, data)\n    }\n\n    addDependencyRelationship(item, el, data) {\n      item.relationships.dependencies.push(this.generateRelationship(el, data))\n    }\n\n    generateRelationship(el, data) {\n      return { data, el }\n    }\n\n    getAllRelatedItemsOfItem(item, relationshipType) {\n      const diagram = this\n      const relatedItems = []\n      const depthThresold = 100\n      const recursiveFn = function(relatedItemData, depth) {\n        _.each(relatedItemData.relationships[relationshipType], (relatedItemChild) => {\n          if (depth < depthThresold) {\n            // Handle circular loops\n            if (relatedItems.indexOf(relatedItemChild) < 0\n              && relatedItemChild.data !== relatedItemData) {\n              relatedItems.push(relatedItemChild)\n              recursiveFn(relatedItemChild.data, depth + 1)\n            }\n          }\n        })\n      }\n      let returnObj\n\n      if (relationshipType) {\n        recursiveFn(item, 0)\n\n        return relatedItems\n      } else {\n        returnObj = {}\n        _.each(['dependants', 'dependencies'], (relationshipName) => {\n          returnObj[relationshipName] = diagram.getAllRelatedItemsOfItem(item, relationshipName)\n        })\n\n        return returnObj\n      }\n    }\n\n    markRelatedItems(item, opts) {\n      let relatedItemsGroup\n      const diagram = this\n      const pushToRelatedItemsGroup = (args) => {\n        relatedItemsGroup.push(diagram.getAllRelatedItemsOfItem(...[item].concat(args)))\n      }\n\n      opts = opts || {}\n\n      if (diagram.markRelatedFn && item.relationships) {\n        relatedItemsGroup = []\n\n        if (opts.filter) pushToRelatedItemsGroup([opts.filter])\n        else _.each([\n          ['dependants'],\n          ['dependencies'],\n        ], pushToRelatedItemsGroup)\n\n        _.each(relatedItemsGroup, (relatedItems) => {\n          _.each(relatedItems, diagram.markRelatedFn)\n        })\n\n        diagram.markRelatedFn(item.relationships.self)\n      }\n    }\n\n    register() {\n      const diagram = this\n\n      d.diagramTypes = d.diagramTypes || []\n      d.diagramTypes.push(diagram.name)\n      d[diagram.name] = function() {\n        const args = Array.prototype.slice.call(arguments)\n\n        d.utils.runIfReady(() => {\n          createdDiagramsMaxId++\n          d.diagramsRegistry.push({\n            data: args,\n            diagram,\n            id: createdDiagramsMaxId,\n          })\n          diagram.diagramId = createdDiagramsMaxId\n          diagram.addConversionButtons()\n          args.unshift(createdDiagramsMaxId)\n          diagram.create(...args)\n          d.events.emit('diagram-created', diagram)\n        })\n      }\n\n      _.defaults(d[diagram.name], Object.getPrototypeOf(diagram))\n    }\n\n    addConversionButtons() {\n      const diagram = this\n      const div = Diagram.addDivBeforeSvg()\n      let onClickFn\n\n      _.each(d.diagramTypes, (diagramType) => {\n        if (diagramType !== diagram.name) {\n          onClickFn = `diagrams.Diagram.convertDiagram(${diagram.diagramId}, '${diagramType}')`\n          div.appendButtonToDiv('diagrams-box-conversion-button',\n            `To ${diagramType} diagram`, onClickFn)\n        }\n      })\n    }\n  }\n\n  d.utils.composeWithEventEmitter(Diagram)\n\n  return Diagram\n}\n\nexport default getDiagramClass\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/getDiagramClass.js\n **/","var map = {\n\t\"./Box/index\": 8,\n\t\"./Graph/index\": 9,\n\t\"./Layer/index\": 11\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/diagrams ^\\.\\/.*\\/index$\n ** module id = 7\n ** module chunks = 0\n **/","import d from 'diagrams'\n\nexport default () => {\n  const helpers = {\n    addButtons(creationId) {\n      const div = d.Diagram.addDivBeforeSvg()\n\n      div.appendButtonToDiv('diagrams-box-collapse-all-button', 'Collapse all',\n        `diagrams.box.collapseAll(${creationId})`)\n      div.appendButtonToDiv('diagrams-box-expand-all-button', 'Expand all',\n        `diagrams.box.expandAll(${creationId})`)\n    },\n\n    collapseAll(creationId) {\n      helpers.expandOrCollapseAll(creationId, 'collapse')\n    },\n\n    collapseItem(item) {\n      if (item.items.length > 0) {\n        item.collapsedItems = item.items\n        item.collapsed = true\n        item.items = []\n      }\n    },\n\n    convertToGraph(origConf) {\n      console.log(\"origConf\", origConf)\n    },\n\n    convertToLayer(origConf) {\n      const convertDataToLayers = (items) => {\n        _.each(items, (item, index) => {\n          if (_.isString(item)) {\n            item = items[index] = {\n              text: item,\n            }\n          }\n\n          if (item.description) item.text += `: ${item.description}`\n\n          if (item.items) convertDataToLayers(item.items)\n          else item.items = []\n        })\n      }\n      const createLayers = () => {\n        const svg = d3.select('svg')\n\n        d3.selectAll('input.diagrams-diagram-button').remove()\n\n        svg.remove()\n        d.layer(layersData)\n      }\n      const layersData = []\n\n      layersData.push({\n        items: origConf.body,\n        text: origConf.name,\n      })\n      convertDataToLayers(layersData[0].items)\n      createLayers()\n    },\n\n    dataFromGeneralToSpecific(generalData) {\n      const finalData = d.utils.dataFromGeneralToSpecificForATreeStructureType(generalData)\n\n      finalData.name = finalData.text\n      finalData.body = finalData.items\n\n      delete finalData.items\n      delete finalData.text\n\n      return finalData\n    },\n\n    dataFromSpecificToGeneral(conf) {\n      let maxId = -1\n      const finalItems = []\n      const connections = []\n      const recursiveFn = (items, parentCreatedItem) => {\n        _.each(items, (item) => {\n          const createdItem = {\n            description: item.description,\n            graphsData: {\n              box: {\n                options: item.options,\n              },\n            },\n            id: ++maxId,\n            name: item.text,\n          }\n\n          finalItems.push(createdItem)\n\n          if (parentCreatedItem) {\n            connections.push({\n              from: createdItem.id,\n              to: parentCreatedItem.id,\n            })\n          } else {\n            connections.push({\n              from: createdItem.id,\n              to: 0,\n            })\n          }\n\n          if (item.items && item.items.length > 0) recursiveFn(item.items, createdItem)\n        })\n      }\n\n      finalItems.push({\n        id: ++maxId,\n        name: conf.name,\n      })\n      recursiveFn(conf.body)\n\n      return {\n        connections,\n        items: finalItems,\n      }\n    },\n\n    expandAll(creationId) {\n      helpers.expandOrCollapseAll(creationId, 'expand')\n    },\n\n    expandItem(item) {\n      if (item.collapsedItems) {\n        item.items = item.collapsedItems\n        delete item.collapsedItems\n        item.collapsed = false\n      }\n    },\n\n    expandOrCollapseAll(creationId, collapseOrExpand) {\n      helpers.traverseBodyDataAndRefresh(creationId, {\n        withCollapsedItems: true,\n      }, (item) => {\n        if (item.hasOwnProperty('collapsed')) {\n          helpers[`${collapseOrExpand}Item`](item)\n        }\n      })\n    },\n\n    filterByString: _.debounce((opts, creationId) => {\n      const getHiddenValueSetter = (value) => {\n        return (item) => {\n          item.hidden = value\n        }\n      }\n      const setHiddenToFalse = getHiddenValueSetter(false)\n\n      helpers.traverseBodyDataAndRefresh(creationId, null, (item, parents) => {\n        const anyParentIsShowed = _.any(parents, parent => parent.hidden !== true)\n\n        if (opts.showChildren === false || anyParentIsShowed === false) {\n          if (new RegExp(opts.str, 'i').test(item.text) === false) getHiddenValueSetter(true)(item)\n          else {\n            _.each(parents, setHiddenToFalse)\n            setHiddenToFalse(item)\n          }\n        } else setHiddenToFalse(item)\n      })\n    }, 500),\n\n    generateContainer(...args) {\n      const text = args[0]\n      let description = args[1]\n      let items = args[2]\n      let options = args[3] || null\n\n      if (_.isArray(description)) {\n        options = items\n        items = description\n        description = null\n      }\n\n      return helpers.generateItem({ description, items, options, text })\n    },\n\n    generateDefinition(text, description) {\n      return helpers.generateItem({ description, text })\n    },\n\n    generateDefinitionWithSharedGet(...args) {\n      const text = args[0]\n      let sharedKey, preffix\n\n      preffix = (arguments.length > 1) ? args[1] : ''\n      sharedKey = preffix + text.split('(')[0]\n\n      return Box.generateDefinition(text, d.shared.get(sharedKey))\n    },\n\n    generateItem({ description, items, options, text }) {\n      const defaultOptions = {\n        isLink: false,\n        notCompleted: false,\n      }\n\n      options = options || {}\n      options = helpers.parseItemGenerationOptions(options)\n\n      return {\n        description: description || null,\n        items: items || [],\n        options: _.defaults(options, defaultOptions),\n        text,\n      }\n    },\n\n    generateLink(text, url) {\n      return helpers.generateItem({ description: url, items: null, options: {\n        isLink: true,\n      }, text })\n    },\n\n    parseItemGenerationOptions(options) {\n      let parsedOptions\n\n      if (_.isString(options)) {\n        options = options.split(' ')\n        parsedOptions = {}\n        _.each(options, (optionsKey) => {\n          // option-one -> optionOne\n          const newKey = optionsKey\n            .replace(/-([a-z])/g, g => g[1].toUpperCase())\n\n          parsedOptions[newKey] = true\n        })\n      } else parsedOptions = options\n\n      return parsedOptions\n    },\n\n    traverseBodyDataAndRefresh(creationId, opts, cb) {\n      const conf = d.Diagram.getDataWithCreationId(creationId)[1]\n      const bodyData = conf.body\n      const recursiveFn = (items, parents) => {\n        _.each(items, (item) => {\n          if (cb) cb(item, parents)\n\n          if (item.items) recursiveFn(item.items, parents.concat(item))\n\n          if (opts.withCollapsedItems && item.collapsedItems)\n            recursiveFn(item.collapsedItems, parents.concat(item))\n        })\n      }\n\n      opts = opts || {}\n      opts.withCollapsedItems = opts.withCollapsedItems || false\n      recursiveFn(bodyData, [])\n      helpers.addBodyItemsAndUpdateHeights()\n    },\n  }\n\n  let textGId = 0\n  const Box = class Box extends d.Diagram {\n    create(creationId, conf, opts) {\n      const diagram = this\n      const svg = d.svg.generateSvg()\n      const width = svg.attr('width') - 40\n      const nameHeight = 50\n      const boxG = svg.append('g').attr({\n        class: 'box-diagram',\n        transform: 'translate(20, 20)',\n      })\n      const nameG = boxG.append('g')\n      const rowHeight = 30\n      const depthWidth = 35\n      const urlParams = d.utils.getUrlParams()\n      const collapseIfNecessary = (el, item) => {\n        if (item.items.length > 0 || item.collapsedItems) {\n          const textEl = el.select('text')\n          const yDim = textEl.attr('y')\n          const xDim = textEl.attr('x')\n          const triggerEl = el.append('g').attr({\n            class: 'collapsible-trigger',\n          })\n          const collapseListener = () => {\n            helpers.collapseItem(item)\n            helpers.addBodyItemsAndUpdateHeights()\n          }\n          const expandListener = () => {\n            helpers.expandItem(item)\n            helpers.addBodyItemsAndUpdateHeights()\n          }\n          const triggerTextEl = triggerEl.append('text').attr({\n            x: Number(xDim) - 20,\n            y: Number(yDim) + 5,\n          })\n          const setCollapseTextAndListener = () => {\n            triggerTextEl.text('-').attr('class', 'minus')\n            triggerEl.on('click', collapseListener)\n          }\n          const setExpandTextAndListener = () => {\n            triggerTextEl.text('+').attr({\n              class: 'plus',\n              y: yDim,\n            })\n            triggerEl.on('click', expandListener)\n          }\n          let clipPathId\n\n          triggerElId += 1\n          clipPathId = `clippath-${triggerElId}`\n          triggerEl.append('clipPath').attr('id', clipPathId).append('rect').attr({\n            height: 15,\n            width: 20,\n            x: xDim - 20,\n            y: yDim - 17,\n          })\n          triggerTextEl.attr('clip-path', `url(#${clipPathId})`)\n\n          if (_.isUndefined(item.collapsed)) {\n            item.collapsed = false\n            setCollapseTextAndListener()\n          } else {\n            if (item.collapsed === true) setExpandTextAndListener()\n            else if (item.collapsed === false) setCollapseTextAndListener()\n          }\n        }\n      }\n      const addBodyItems = (items, container, depth) => {\n        let newContainer, textEl, textWidth, descriptionWidth, containerText, textElValue\n\n        items = items || conf.body\n        container = container || bodyG\n        depth = depth || 1\n\n        if (items === conf.body) bodyPosition = 1\n\n        _.each(items, (item, itemIndex) => {\n          if (item.hidden !== true) {\n            const currentTextGId = `diagrams-box-text-${textGId++}`\n\n            if (_.isString(item)) {\n              item = helpers.generateItem({ text: item })\n              items[itemIndex] = item\n            }\n            item.items = item.items || []\n\n            if (item.items.length > 0) {\n              newContainer = container.append('g')\n              containerText = d.utils.formatShortDescription(item.text)\n\n              if (item.items && item.items.length > 0) containerText += ':'\n\n              if (item.description) {\n                item.fullText = d.utils\n                  .generateATextDescriptionStr(containerText, item.description)\n                containerText += ' (...)'\n              } else item.fullText = item.text\n\n              textEl = newContainer.append('text').text(containerText).attr({\n                id: currentTextGId,\n                x: depthWidth * depth,\n                y: rowHeight * ++bodyPosition,\n              })\n\n              addBodyItems(item.items, newContainer, depth + 1)\n            } else {\n              if (item.options && item.options.isLink === true) {\n                newContainer = container.append('svg:a').attr(\"xlink:href\", item.description)\n                textEl = newContainer.append('text')\n                  .text(d.utils.formatShortDescription(item.text)).attr({\n                    fill: '#3962B8',\n                    id: currentTextGId,\n                    x: depthWidth * depth,\n                    y: rowHeight * ++bodyPosition,\n                  })\n\n                item.fullText = `${item.text} (${item.description})`\n              } else {\n                newContainer = container.append('g').attr({\n                  id: currentTextGId,\n                })\n                textEl = newContainer.append('text')\n                  .text(d.utils.formatShortDescription(item.text)).attr({\n                    class: 'diagrams-box-definition-text',\n                    x: depthWidth * depth,\n                    y: rowHeight * ++bodyPosition,\n                  })\n\n                if (item.description) {\n                  textWidth = textEl[0][0].getBoundingClientRect().width\n                  descriptionWidth = svg[0][0].getBoundingClientRect().width\n                    - textWidth - depthWidth * depth - 30\n\n                  newContainer.append('text')\n                    .text(`- ${d.utils.formatShortDescription(item.description)}`).attr({\n                      x: depthWidth * depth + textWidth + 5,\n                      y: rowHeight * bodyPosition - 1,\n                    }).each(d.svg.textEllipsis(descriptionWidth))\n                }\n\n                item.fullText = d.utils.generateATextDescriptionStr(item.text, item.description)\n              }\n            }\n\n            collapseIfNecessary(newContainer, item)\n            item.textG = newContainer\n            item.textEl = textEl\n\n            if (item.options.notCompleted === true) {\n              item.textG.attr('class', `${(item.textG.attr('class') || '')}`\n                + ` diagrams-box-not-completed-block`)\n              textElValue = item.textEl.text()\n              item.textEl.text('')\n              item.textEl.append('tspan').text(`${textElValue} `)\n              item.textEl.append('tspan').text('[NOT COMPLETED]')\n                .attr('class', 'diagrams-box-not-completed-tag')\n            }\n\n            diagram.addMouseListenersToEl(textEl, item)\n          }\n        })\n      }\n      const scrollToTarget = (target) => {\n        let targetFound = null\n        const recursiveFindTarget = (items) => {\n          _.each(items, (item) => {\n            if (_.isNull(targetFound)) {\n              if (_.isString(item.text) && item.text.indexOf(target) > -1) targetFound = item\n              else if (item.items) recursiveFindTarget(item.items)\n            }\n          })\n        }\n        let currentScroll, scrollElTop\n\n        recursiveFindTarget(conf.body)\n\n        if (targetFound) {\n          currentScroll = (window.pageYOffset || document.documentElement.scrollTop)\n            - (document.documentElement.clientTop || 0)\n          scrollElTop = targetFound.textG[0][0].getBoundingClientRect().top\n          _.defer(() => {\n            window.scrollTo(0, scrollElTop + currentScroll)\n          })\n        }\n        console.log(\"targetFound\", targetFound)\n      }\n      let triggerElId, bodyG, bodyPosition, bodyRect\n\n      opts = opts || {}\n\n      helpers.addBodyItemsAndUpdateHeights = () => {\n        const currentScroll = (window.pageYOffset || document.documentElement.scrollTop)\n          - (document.documentElement.clientTop || 0)\n\n        svg.attr('height', 10)\n\n        if (bodyG) bodyG.remove()\n        bodyG = boxG.append('g').attr({\n          transform: `translate(0, ${nameHeight})`,\n        })\n        bodyRect = bodyG.append('rect').attr({\n          fill: '#fff',\n          stroke: '#000',\n          width,\n        }).style({\n          filter: 'url(#diagrams-drop-shadow-box)',\n        })\n        triggerElId = 0\n        addBodyItems()\n        diagram.setRelationships(conf.body)\n        d.svg.updateHeigthOfElWithOtherEl(svg, boxG, 50)\n        d.svg.updateHeigthOfElWithOtherEl(bodyRect, boxG, 25 - nameHeight)\n\n        window.scrollTo(0, currentScroll)\n        diagram.emit('items-rendered')\n      }\n\n      d.svg.addFilterColor({ container: svg, deviation: 3, id: 'box', slope: 4 })\n\n      nameG.append('rect').attr({\n        fill: '#fff',\n        height: nameHeight,\n        stroke: '#000',\n        width,\n      }).style({\n        filter: 'url(#diagrams-drop-shadow-box)',\n      })\n      nameG.append('text').attr({\n        x: width / 2,\n        y: 30,\n      }).text(conf.name).style({\n        'font-weight': 'bold',\n        'text-anchor': 'middle',\n      })\n\n      d3.select(document.body).style('opacity', 0)\n      helpers.addBodyItemsAndUpdateHeights()\n\n      if (opts.allCollapsed === true) helpers.collapseAll(creationId)\n      helpers.addButtons(creationId)\n      d3.select(document.body).style('opacity', 1)\n\n      if (urlParams.target) scrollToTarget(urlParams.target)\n    }\n\n    setRelationships(items, container) {\n      const diagram = this\n\n      _.each(items, (item) => {\n        diagram.generateEmptyRelationships(item)\n\n        if (container) {\n          diagram.addDependantRelationship(container, item.textG, item)\n          diagram.addDependencyRelationship(item, container.textG, container)\n        }\n\n        if (item.items && item.items.length > 0) diagram.setRelationships(item.items, item)\n      })\n    }\n  }\n\n  new Box({\n    helpers,\n    name: 'box',\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/diagrams/Box/index.js\n **/","import d from 'diagrams'\nimport helpers from './helpers'\n\nconst SHY_CONNECTIONS = 'Show connections selectively'\nconst GRAPH_ZOOM = 'dia graph zoom'\nconst GRAPH_DRAG = 'Drag nodes on click (may make links difficult)'\nconst CURVED_ARROWS = 'All arrows are curved'\nconst graphZoomConfig = {\n  private: true,\n  type: Number,\n  value: 1,\n}\nconst dPositionFn = d.utils.positionFn\nconst dTextFn = d.utils.textFn\n\nexport default () => {\n  const Graph = class Graph extends d.Diagram {\n    create(creationId, data, conf) {\n      const diagram = this\n      const bodyHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n      const svg = d.svg.generateSvg()\n      const container = svg.append('g')\n      const width = svg.attr('width')\n      const dragNodesConfig = diagram.config(GRAPH_DRAG)\n      const curvedArrows = diagram.config(CURVED_ARROWS)\n      let force, drag, link, linkOuter, node, zoom,\n        singleNodeEl, shape, shapeEl, markers, parsedData\n\n      helpers.resetLinksNumberMap()\n\n      const height = d.svg.selectScreenHeightOrHeight(bodyHeight - 250)\n\n      const tick = () => {\n        const setPathToLink = (pathClass) => {\n          link.select(`path.${pathClass}`).attr(\"d\", (da) => {\n            const linksNumber = helpers.getLinksNumberMapItemWithLink(da)\n            const linkIndex = da.data.linkIndex\n            const dx = da.target.x - da.source.x\n            const dy = da.target.y - da.source.y\n            const dr = Math.sqrt(dx * dx + dy * dy) * (curvedArrows ? 3.5 : 1)\n              * (linkIndex + (curvedArrows ? 1 : 0) / (linksNumber * 3))\n\n            return `M${da.source.x},${da.source.y}A`\n              + `${dr},${dr} 0 0,1 `\n              + `${da.target.x},${da.target.y}`\n          })\n        }\n\n        _.each(['link-path', 'link-path-outer'], setPathToLink)\n\n        node.each((singleNode) => {\n          if (singleNode.shape === 'circle') {\n            node.select('circle').attr(\"cx\", dPositionFn('x')).attr(\"cy\", dPositionFn('y'))\n          } else {\n            if (singleNode.shape === 'triangle') shapeEl = node.select('path.triangle')\n            else if (singleNode.shape === 'square') shapeEl = node.select('path.square')\n\n            d.utils.applySimpleTransform(shapeEl)\n          }\n        })\n        node.select('text').attr(\"x\", dPositionFn('x')).attr(\"y\", dPositionFn('y', -20))\n      }\n      const parseData = () => {\n        let maxId = _.reduce(data, (memo, tmpNode) => {\n          const id = tmpNode.id || 0\n\n          return (memo > id) ? memo : id\n        }, 0)\n        const idsMap = {}\n        const nodesWithLinkMap = {}\n        const colors = d3.scale.category20()\n        const handleConnections = (tmpNode, nodeIndex) => {\n          if (tmpNode.connections.length > 0) {\n            _.each(tmpNode.connections, (connection) => {\n              _.each(connection.nodesIds, (otherNodeId) => {\n                otherNode = idsMap[otherNodeId]\n\n                if (otherNode) {\n                  if (conf.hideNodesWithoutLinks) {\n                    nodesWithLinkMap[otherNode.index] = true\n                    nodesWithLinkMap[nodeIndex] = true\n                  }\n                  linkObj = {}\n\n                  if (connection.direction === 'out') {\n                    linkObj.source = nodeIndex\n                    linkObj.target = otherNode.index\n                  } else {\n                    linkObj.source = otherNode.index\n                    linkObj.target = nodeIndex\n                  }\n                  linkObj.data = connection\n                  linkObj.color = parsedData.nodes[linkObj.source].color\n                  helpers.updateLinksNumberMapWithLink(linkObj)\n                  linkObj.data.linkIndex = helpers.getLinksNumberMapItemWithLink(linkObj) - 1\n\n                  if (linkObj.data.text) linkObj.data.fullText = linkObj.data.text\n                  parsedData.links.push(linkObj)\n                }\n              })\n            })\n          }\n        }\n        let nodeId, color, options, otherNode, linkObj\n\n        parsedData = {\n          links: [],\n          nodes: [],\n        }\n        markers = []\n        _.each(data, (dataNode, nodeIndex) => {\n          nodeId = _.isUndefined(dataNode.id) ? maxId++ : dataNode.id\n          color = colors(nodeIndex)\n          options = dataNode.options || {}\n\n          parsedData.nodes.push({\n            bold: options.bold || false,\n            color,\n            connections: dataNode.connections || [],\n            description: dataNode.description || null,\n            id: nodeId,\n            linkToUrl: options.linkToUrl || null,\n            name: dataNode.name,\n            shape: options.shape || 'circle',\n          })\n          idsMap[nodeId] = {\n            index: nodeIndex,\n          }\n          idsMap[nodeId].color = color\n          markers.push({\n            color,\n            id: nodeId,\n          })\n\n        })\n\n        diagram.config(conf)\n\n        if (conf.info) helpers.addDiagramInfo(diagram, svg, conf.info)\n\n        _.each(parsedData.nodes, handleConnections)\n\n        if (conf.hideNodesWithoutLinks === true) {\n          _.each(parsedData.nodes, (pdNode, nodeIndex) => {\n            if (nodesWithLinkMap[nodeIndex] !== true) pdNode.hidden = true\n          })\n        }\n      }\n\n      const zoomed = (translate, scale) => {\n        scale = scale || 1\n        container.attr(\"transform\", `translate(${translate})scale(${scale})`)\n        graphZoomConfig.value = scale\n        diagram.config(GRAPH_ZOOM, graphZoomConfig)\n      }\n\n      const dragstarted = function() {\n        d3.event.sourceEvent.stopPropagation()\n        d3.select(this).classed(\"dragging\", true)\n        force.start()\n      }\n\n      const dragged = function(da) {\n        d3.select(this).attr(\"cx\", da.x = d3.event.x).attr(\"cy\", da.y = d3.event.y)\n      }\n\n      const dragended = function() {\n        d3.select(this).classed(\"dragging\", false)\n      }\n\n      const setRelationships = () => {\n        _.each(parsedData.nodes, diagram.generateEmptyRelationships, diagram)\n        _.each(parsedData.nodes, (pdNode) => {\n          diagram.addSelfRelationship(pdNode, pdNode.shapeEl, pdNode)\n        })\n        _.each(parsedData.links, (pdLink) => {\n          diagram.addDependencyRelationship(pdLink.source, pdLink.target.shapeEl, pdLink.target)\n          diagram.addDependantRelationship(pdLink.target, pdLink.source.shapeEl, pdLink.source)\n        })\n      }\n\n      const getAllLinks = () => container.selectAll(\".link\")\n\n      const getLinksWithIsHiding = () =>\n        getAllLinks().filter((da) => da.data.hasOwnProperty('shyIsHiding'))\n\n      const setLinkIsHidingIfNecessary = (isHiding, tmpLink) => {\n        let linksWithIsHiding\n\n        if (diagram.config(SHY_CONNECTIONS)) {\n          if (isHiding === false) tmpLink.data.shyIsHiding = isHiding\n          else if (isHiding === true) {\n            linksWithIsHiding = getLinksWithIsHiding()\n            linksWithIsHiding.each((da) => {\n              da.data.shyIsHiding = true\n            })\n          }\n          tmpLink.data.shyIsHidingChanged = true\n        }\n      }\n\n      const setDisplayOfShyConnections = (display, tmpNode) => {\n        const isShowing = display === 'show'\n        const isHiding = display === 'hide'\n        const nodeData = tmpNode.data\n        const linksWithIsHiding = getLinksWithIsHiding()\n        const nodeLinks = getAllLinks().filter((da) => {\n          return da.source.id === nodeData.id || da.target.id === nodeData.id\n        })\n        const setDisplay = (links, show) => {\n          links.classed('shy-link-hidden', !show)\n          links.classed('shy-link-showed', show)\n        }\n        const hideLinks = (links) => {\n          setDisplay(links, false)\n          links.each((da) => {\n            delete da.data.shyIsHiding\n          })\n        }\n        const futureConditionalHide = () => {\n          setTimeout(() => {\n            allAreHiding = true\n            shyIsHidingIsSame = true\n            nodeLinks.each((da) => {\n              allAreHiding = allAreHiding && da.data.shyIsHiding\n\n              if (da.data.shyIsHidingChanged) {\n                shyIsHidingIsSame = false\n                delete da.data.shyIsHidingChanged\n              }\n            })\n\n            if (allAreHiding && shyIsHidingIsSame) hideLinks(nodeLinks)\n            else futureConditionalHide()\n          }, 500)\n        }\n        let allAreHiding, shyIsHidingIsSame\n\n        if (linksWithIsHiding[0].length === 0) {\n          if (isShowing) setDisplay(nodeLinks, true)\n          else if (isHiding) {\n            nodeLinks.each((da) => {\n              da.data.shyIsHiding = true\n            })\n            futureConditionalHide()\n          }\n        } else {\n          if (isShowing) {\n            linksWithIsHiding.each((da, index) => {\n              if (index === 0) da.data.shyIsHiding = false\n            })\n          } else if (isHiding) setLinkIsHidingIfNecessary(true, linksWithIsHiding.data()[0])\n        }\n      }\n\n      const setReRender = _.partial(helpers.setReRender, diagram, creationId, data, _)\n\n      diagram.markRelatedFn = (item) => {\n        item.el.style('stroke-width', '20px')\n      }\n      diagram.unmarkAllItems = () => {\n        _.each(parsedData.nodes, (pdNode) => {\n          pdNode.shapeEl.style('stroke-width', '1px')\n        })\n      }\n\n      conf = conf || {}\n      parseData()\n\n      svg.attr({\n        class: 'graph-diagram',\n        height,\n      })\n\n      zoom = d3.behavior.zoom().scaleExtent([0.1, 10]).on(\"zoom\", () => {\n        zoomed(d3.event.translate, d3.event.scale)\n      })\n\n      svg.call(zoom)\n\n      zoom.translate([100, 100])\n        .scale(diagram.config(GRAPH_ZOOM).value)\n\n      zoomed(zoom.translate(), zoom.scale())\n\n      force = d3.layout.force()\n        .size([width, height])\n        .charge(conf.charge || -10000)\n        .linkDistance(conf.linkDistance || 140)\n        .on(\"tick\", tick)\n\n      drag = d3.behavior.drag().origin(da => da)\n        .on(\"dragstart\", dragstarted).on(\"drag\", dragged).on(\"dragend\", dragended)\n\n      force.nodes(parsedData.nodes).links(parsedData.links).start()\n\n      container.append(\"svg:defs\").selectAll(\"marker\")\n        .data(markers)\n        .enter().append(\"svg:marker\")\n        .attr({\n          class: 'arrow-head',\n          fill: dTextFn('color'),\n          id: dTextFn('id', 'arrow-head-'),\n          markerHeight: 8,\n          markerWidth: 8,\n          orient: 'auto',\n          refX: 19,\n          refY: curvedArrows ? -1.5 : 0,\n          viewBox: '0 -5 10 10',\n        }).append(\"svg:path\").attr(\"d\", \"M0,-5L10,0L0,5\")\n\n      link = container.selectAll(\".link\").data(parsedData.links).enter().append('g')\n        .attr(\"class\", () => {\n          let finalClass = 'link'\n\n          if (diagram.config(SHY_CONNECTIONS)) finalClass += ' shy-link shy-link-hidden'\n\n          return finalClass\n        })\n      link.append(\"svg:path\").attr({\n        class: 'link-path',\n        'marker-end': da => `url(#arrow-head-${da.source.id})`,\n      }).style({\n        stroke: dTextFn('color'),\n        'stroke-dasharray': (da) => {\n          if (da.data.line === 'plain') return null\n          else if (da.data.line === 'dotted') return '5,5'\n        },\n      })\n\n      linkOuter = link.append('g')\n      linkOuter.append('svg:path').attr('class', 'link-path-outer')\n      linkOuter.each(function(da) {\n        diagram.addMouseListenersToEl(d3.select(this), da.data, {\n          mouseenter(eLink) {\n            setLinkIsHidingIfNecessary(false, eLink)\n          },\n          mouseleave(eLink) {\n            setLinkIsHidingIfNecessary(true, eLink)\n          },\n        })\n      })\n\n      node = container.selectAll(\".node\").data(parsedData.nodes).enter().append('g').attr({\n        class(da) {\n          let finalClass = 'node'\n\n          if (da.hidden === true) finalClass += ' node-hidden'\n\n          return finalClass\n        },\n        id: dTextFn('id', 'node-'),\n      })\n\n      node.each(function(singleNode) {\n        let singleNodeClasses = ''\n\n        singleNodeEl = d3.select(this)\n        singleNode.fullText = d.utils\n          .generateATextDescriptionStr(singleNode.name, singleNode.description)\n\n        if (singleNode.shape === 'circle') {\n          shapeEl = singleNodeEl.append(\"circle\").attr({\n            fill: dTextFn('color'),\n            r: 12,\n          })\n        } else {\n          shape = d3.svg.symbol().size(750)\n          shapeEl = singleNodeEl.append(\"path\")\n\n          if (singleNode.shape === 'triangle') {\n            shape = shape.type('triangle-up')\n            singleNodeClasses += ' triangle'\n          } else if (singleNode.shape === 'square') {\n            shape = shape.type('square')\n            singleNodeClasses += ' square'\n          }\n          shapeEl = shapeEl.attr({\n            d: shape,\n            fill: dTextFn('color'),\n          })\n          d.utils.applySimpleTransform(shapeEl)\n        }\n\n        if (dragNodesConfig === true) shapeEl.call(drag)\n\n        if (singleNode.bold === true) singleNodeClasses += ' bold'\n        else singleNodeClasses += ' thin'\n        shapeEl.attr('class', singleNodeClasses)\n\n        singleNode.shapeEl = shapeEl\n        diagram.addMouseListenersToEl(shapeEl, singleNode, {\n          click(eNode) {\n            if (eNode.data.linkToUrl) window.open(eNode.data.linkToUrl)\n          },\n          mouseenter(nodeData) {\n            if (diagram.config(SHY_CONNECTIONS)) setDisplayOfShyConnections('show', nodeData)\n          },\n          mouseleave(nodeData) {\n            if (diagram.config(SHY_CONNECTIONS)) setDisplayOfShyConnections('hide', nodeData)\n          },\n        })\n      })\n\n      node.append(\"text\").text(dTextFn('name'))\n\n      setRelationships()\n      setReRender(conf)\n      diagram.listen('configuration-changed', (config) => {\n        if (config.key === SHY_CONNECTIONS || config.key === GRAPH_DRAG) {\n          setReRender(config)\n          diagram.removePreviousAndCreate(creationId, data, config)\n        }\n      })\n    }\n  }\n\n  new Graph({\n    configuration: {\n      [CURVED_ARROWS]: false,\n      [GRAPH_DRAG]: false,\n      [GRAPH_ZOOM]: graphZoomConfig,\n      [SHY_CONNECTIONS]: true,\n      info: null,\n    },\n    configurationKeys: {\n      SHY_CONNECTIONS,\n    },\n    helpers,\n    name: 'graph',\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/diagrams/Graph/index.js\n **/","import d from 'diagrams'\n\nlet linksNumberMap\n\nconst helpers = {\n  addDiagramInfo(diagram, svg, info) {\n    if (_.isString(info)) info = [info]\n    const hasDescription = info.length === 2\n    const svgWidth = svg[0][0].getBoundingClientRect().width\n    const infoText = info[0] + (hasDescription ? ' (...)' : '')\n    const el = svg.append('g').attr({\n      class: 'graph-info',\n      transform: 'translate(10, 50)',\n    }).append('text').text(infoText).each(d.svg.textEllipsis(svgWidth))\n\n    if (hasDescription) {\n      diagram.addMouseListenersToEl(el, {\n        el,\n        fullText: d.utils.generateATextDescriptionStr(info[0], info[1]),\n      })\n    }\n  },\n  connectionFnFactory(baseFn, changedProp, changedVal) {\n    return () => {\n      const connection = baseFn(...arguments)\n      const setVal = (singleConnection) => {\n        singleConnection[changedProp] = changedVal\n\n        return connection\n      }\n\n      return (_.isArray(connection)) ? _.map(connection, setVal) : setVal(connection)\n    }\n  },\n  dataFromGeneralToSpecific(generalData) {\n    const finalItems = []\n    const idToIndexMap = {}\n    let targetItem\n\n    _.each(generalData.items, (item, index) => {\n      finalItems.push({\n        description: item.description,\n        id: item.id,\n        name: item.name,\n      })\n      idToIndexMap[item.id] = index\n    })\n\n    _.each(generalData.connections, (connection) => {\n      targetItem = finalItems[idToIndexMap[connection.to]]\n      targetItem.connections = targetItem.connections || []\n      targetItem.connections.push({\n        direction: 'in',\n        nodesIds: [connection.from],\n      })\n    })\n\n    return finalItems\n  },\n  dataFromSpecificToGeneral(data) {\n    const finalItems = []\n    const connections = []\n    const setConnection = (node, connection) => {\n      _.each(connection.nodesIds, (otherNodeId) => {\n        newConnection = {}\n\n        if (connection.direction === 'out') {\n          newConnection.from = node.id\n          newConnection.to = otherNodeId\n        } else if (connection.direction === 'in') {\n          newConnection.from = otherNodeId\n          newConnection.to = node.id\n        }\n\n        connections.push(newConnection)\n      })\n    }\n    let newConnection\n\n    _.each(data, (node) => {\n      finalItems.push({\n        description: node.description,\n        id: node.id,\n        name: node.name,\n      })\n      _.each(node.connections, (connection) => setConnection(node, connection))\n    })\n\n    return {\n      connections,\n      items: finalItems,\n    }\n  },\n  doWithMinIdAndMaxIdOfLinkNodes(link, cb) {\n    const getIndex = (item) => {\n      return (_.isNumber(item)) ? item : item.index\n    }\n    const ids = [getIndex(link.source), getIndex(link.target)]\n    const minIndex = _.min(ids)\n    const maxIndex = _.max(ids)\n\n    return cb(minIndex, maxIndex)\n  },\n  generateConnectionWithText(nodesIds, text) {\n    if (_.isArray(nodesIds) && _.isArray(nodesIds[0])) {\n      return _.map(nodesIds, (args) => {\n        return helpers.generateConnectionWithText.apply({}, args)\n      })\n    }\n\n    if (_.isString(nodesIds)) nodesIds = nodesIds.split(' ').map(Number)\n    else if (_.isNumber(nodesIds)) nodesIds = [nodesIds]\n\n    return d.graph.mergeWithDefaultConnection({ nodesIds, text })\n  },\n  generateFnNodeWithSharedGetAndBoldIfFile(file) {\n    return () => {\n      let opts = ''\n      let preffix = ''\n\n      if (arguments[0].split('@')[0] === file) opts = 'b'\n\n      if (arguments.length > 2) preffix = arguments[2]\n\n      if (arguments.length > 3) opts = `${arguments[3]} ${opts}`\n\n      return helpers.generateNodeWithSharedGet(arguments[0], arguments[1], preffix, opts)\n    }\n  },\n  generateNode() {\n    const node = {\n      name: arguments[0],\n    }\n    const addDefaultConnectionFromNumber = (nodeId) => {\n      node.connections.push(helpers.mergeWithDefaultConnection({\n        nodesIds: [nodeId],\n      }))\n    }\n    const addConnection = (connection) => {\n      if (_.isArray(connection)) _.each(connection, addConnection)\n      else if (_.isNumber(connection)) addConnection({\n        nodesIds: [connection],\n      })\n      else if (_.isObject(connection)) {\n        helpers.mergeWithDefaultConnection(connection)\n        node.connections.push(connection)\n      }\n    }\n    let connections\n\n    if (arguments.length > 1) {\n      connections = arguments[1]\n      node.connections = []\n\n      if (_.isString(connections)) {\n        connections = connections.split(' ').map(Number)\n\n        if (connections.length > 0) node.id = connections[0]\n\n        if (connections.length > 1) {\n          _.each(connections, (nodeId, index) => {\n            if (index > 0) addConnection(nodeId)\n          })\n        }\n      } else if (_.isArray(connections)) {\n        node.id = connections[0]\n        connections = connections.slice(1)\n        _.each(connections, (connection) => {\n          if (_.isNumber(connection)) addDefaultConnectionFromNumber(connection)\n          else addConnection(connection)\n        })\n      } else if (_.isNumber(connections)) node.id = connections\n\n      if (arguments.length > 2) node.description = arguments[2]\n\n      if (arguments.length > 3) node.options = helpers.generateNodeOptions(arguments[3])\n    }\n\n    return node\n  },\n  generateNodeOptions: (options) => {\n    const obj = {}\n    let shape\n\n    if (_.isString(options)) return helpers.generateNodeOptions(options.split(' '))\n    else if (_.isArray(options)) {\n      _.each(options, (opt) => {\n        if (opt.substr(0, 2) === 's-') {\n          shape = opt.substr(2, opt.length - 2)\n          if (shape === 't') obj.shape = 'triangle'\n          else if (shape === 's') obj.shape = 'square'\n          else obj.shape = 'circle'\n\n        } else if (opt === 'b') obj.bold = true\n        else if (opt.substr(0, 2) === 'l~') obj.linkToUrl = opt.substr(2, opt.length - 2)\n      })\n\n      return obj\n    }\n  },\n  generateNodeWithSharedGet() {\n    const text = arguments[0]\n    let sharedKey, preffix, options\n\n    preffix = (arguments.length > 2) ? arguments[2] : ''\n    sharedKey = preffix + text.split('(')[0]\n    options = (arguments.length > 3) ? arguments[3] : null\n\n    return helpers.generateNode(text, arguments[1], d.shared.get(sharedKey), options)\n  },\n  generateNodeWithTargetLink(file, target) {\n    return () => {\n      const args = Array.prototype.slice.call(arguments)\n\n      if (_.isUndefined(args[3])) args[3] = ''\n      else args[3] += ' '\n      args[3] += `l~${file}?target=${encodeURIComponent(target)}`\n\n      return helpers.generateNode.apply({}, args)\n    }\n  },\n  generateNodeWithTextAsTargetLink(file) {\n    return () => {\n      return d.graph.generateNodeWithTargetLink(file, arguments[0]).apply({}, arguments)\n    }\n  },\n  generatePrivateNode() {\n    const args = Array.prototype.slice.call(arguments)\n\n    args[2] += '<br><strong>PRIVATE</strong>'\n    args[3] = 's-t'\n\n    return helpers.generateNode(...args)\n  },\n  getLinksNumberMapItemWithLink(link) {\n    return helpers.doWithMinIdAndMaxIdOfLinkNodes(link, (minIndex, maxIndex) => {\n      return linksNumberMap[minIndex][maxIndex]\n    })\n  },\n  mergeWithDefaultConnection(connection) {\n    const defaultConnection = {\n      direction: 'out',\n      line: 'plain',\n      symbol: 'arrow',\n    }\n\n    return _.defaults(connection, defaultConnection)\n  },\n  resetLinksNumberMap() {\n    linksNumberMap = {}\n  },\n  setReRender(diagram, creationId, data) {\n    diagram.reRender = (conf) => {\n      diagram.unlisten('configuration-changed')\n      diagram.reRender = null\n      diagram.removePreviousAndCreate(creationId, data, conf)\n    }\n  },\n  updateLinksNumberMapWithLink(link) {\n    helpers.doWithMinIdAndMaxIdOfLinkNodes(link, (minIndex, maxIndex) => {\n      if (_.isUndefined(linksNumberMap[minIndex])) linksNumberMap[minIndex] = {}\n\n      if (_.isUndefined(linksNumberMap[minIndex][maxIndex])) {\n        linksNumberMap[minIndex][maxIndex] = 1\n      } else linksNumberMap[minIndex][maxIndex] += 1\n    })\n  },\n}\n\nhelpers.resetLinksNumberMap()\n\nexport default helpers\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/diagrams/Graph/helpers.js\n **/","import d from 'diagrams'\nimport helpers from './helpers'\n\nexport default () => {\n  let layerGId = 0\n  const dTextFn = d.utils.textFn\n\n  class Layer extends d.Diagram {\n    create(creationId, conf) {\n      const diagram = this\n      const config = helpers.config\n      const colors = ['#ECD078', '#D95B43', '#C02942', '#78E4B7',\n        '#53777A', '#00A8C6', '#AEE239', '#FAAE8A']\n      const addItemsPropToBottomItems = (layers) => {\n        _.each(layers, (layer) => {\n          if (layer.hasOwnProperty('items') === false) {\n            layer.items = []\n          } else addItemsPropToBottomItems(layer.items)\n        })\n      }\n      const calculateTheMostOptimalConnection = (layerA, layerBObj) => {\n        // There are 12 possible: 4 sides to 3 each\n        const getTopSidePos = (layer) => {\n          return {\n            x: (layer.x + layer.width / 2) * config.widthSize\n              + config.depthWidthFactor * layer.depth,\n            y: layer.y * config.heightSize + config.depthHeightFactor * layer.depth,\n          }\n        }\n        const getBottomSidePos = (layer) => {\n          return {\n            x: (layer.x + layer.width / 2) * config.widthSize\n              + config.depthWidthFactor * layer.depth,\n            y: (layer.y + layer.height) * config.heightSize\n              - config.depthHeightFactor * layer.depth,\n          }\n        }\n        const getLeftSidePos = (layer) => {\n          return {\n            x: layer.x * config.widthSize + config.depthWidthFactor * layer.depth,\n            y: (layer.y + layer.height / 2) * config.heightSize\n              + config.depthHeightFactor * layer.depth,\n          }\n        }\n        const getRightSidePos = (layer) => {\n          return {\n            x: (layer.x + layer.width) * config.widthSize - config.depthWidthFactor * layer.depth,\n            y: (layer.y + layer.height / 2) * config.heightSize\n              + config.depthHeightFactor * layer.depth,\n          }\n        }\n        const getSidesPos = (layer) => {\n          return {\n            bottom: getBottomSidePos(layer),\n            left: getLeftSidePos(layer),\n            right: getRightSidePos(layer),\n            top: getTopSidePos(layer),\n          }\n        }\n        const distance = {\n          val: Infinity,\n        }\n        const doesNotCrossAnyOfTwoLayers = ({ posA, posB, sideA, sideB }) => {\n          if ((sideA === 'bottom' || sideA === 'left'\n            || sideA === 'top') && sideB === 'right') {\n            if (posA.x < posB.x) return false\n          } else if ((sideA === 'bottom' || sideA === 'right'\n            || sideA === 'top') && sideB === 'left') {\n            if (posA.x > posB.x) return false\n          } else if ((sideA === 'bottom' || sideA === 'right'\n            || sideA === 'left') && sideB === 'top') {\n            if (posA.y > posB.y) return false\n          } else if ((sideA === 'left' || sideA === 'right'\n            || sideA === 'top') && sideB === 'bottom') {\n            if (posA.y < posB.y) return false\n          }\n\n          return true\n        }\n        const calcDistanceAndUpdate = (posA, posB) => {\n          const e2 = (num) => {\n            return Math.pow(num, 2)\n          }\n          const newDistance = Math.sqrt(e2(posA.x - posB.x) + e2(posA.y - posB.y))\n\n          if (newDistance < distance.val) {\n            distance.val = newDistance\n            distance.from = posA\n            distance.to = posB\n\n            return true\n          } else {\n            return false\n          }\n        }\n        const eachSide = (cb) => {\n          _.each(['top', 'bottom', 'left', 'right'], (side) => {\n            cb(side)\n          })\n        }\n        const sameTypeOfSides = (sideA, sideB) => {\n          let result = false\n\n          _.each([\n            [sideA, sideB],\n            [sideB, sideA],\n          ], (sides) => {\n            if (sides[0] === 'top' && sides[1] === 'bottom') result = true\n            else if (sides[0] === 'left' && sides[1] === 'right') result = true\n          })\n\n          return result\n        }\n        const loopSidesToGetConnection = (sameTypeOfSidesCondition) => {\n          eachSide((sideA) => {\n            eachSide((sideB) => {\n              if (_.isUndefined(layerB.alreadyConnections)) layerB.alreadyConnections = []\n\n              if (sideA !== sideB && layerA.alreadyConnections.indexOf(sideA) < 0\n                && layerB.alreadyConnections.indexOf(sideB) < 0) {\n                if ((sameTypeOfSidesCondition === false && sameTypeOfSides(sideA, sideB) === false)\n                  || sameTypeOfSides(sideA, sideB)) {\n                  if (doesNotCrossAnyOfTwoLayers({ posA: layerAPos[sideA],\n                      posB: layerBPos[sideB], sideA, sideB })) {\n                    changed = calcDistanceAndUpdate(layerAPos[sideA], layerBPos[sideB])\n\n                    if (changed === true) {\n                      distance.sideA = sideA\n                      distance.sideB = sideB\n                    }\n                  }\n                }\n              }\n            })\n          })\n        }\n        const layerB = layerBObj.layer\n        const layerAPos = getSidesPos(layerA)\n        const layerBPos = getSidesPos(layerB)\n        let changed\n\n        loopSidesToGetConnection(true)\n\n        if (changed !== true) loopSidesToGetConnection(false)\n\n        layerA.alreadyConnections.push(distance.sideA)\n        layerB.alreadyConnections.push(distance.sideB)\n\n        return distance\n      }\n      const drawConnection = (connection) => {\n        const container = connection.layer.container\n        const containerData = connection.layer.containerData\n        let connectionG, connectionId, connectionCoords, linkLine, connectionPath\n\n        _.each(connection.connectedTo, (connectedToLayer) => {\n          connectionCoords = calculateTheMostOptimalConnection(connection.layer, connectedToLayer)\n          linkLine = d3.svg.line().x(dTextFn('x')).y(dTextFn('y'))\n          connectionId = `${connection.layer.id}-${connectedToLayer.layer.id}`\n          connectionG = container.append('g').attr('id', connectionId)\n\n          if (connectionCoords.from && connectionCoords.to) {\n            connectionPath = connectionG.append('path')\n              .attr('d', linkLine([connectionCoords.from, connectionCoords.to]))\n              .style({\n                fill: 'none',\n                stroke: '#000',\n              })\n\n            if (connectedToLayer.type === 'dashed')\n              connectionPath.style('stroke-dasharray', '5, 5')\n\n            connectionG.append(\"circle\").attr({\n              cx: connectionCoords.to.x,\n              cy: connectionCoords.to.y,\n              fill: colors[connection.layer.depth - 1],\n              r: 5,\n            }).style({\n              stroke: '#000',\n            })\n\n            containerData.connections = containerData.connections || []\n            containerData.connections.push({\n              el: connectionG,\n              id: connectionId,\n            })\n          }\n        })\n      }\n      const drawConnectionsIfAny = (layers) => {\n        layers = layers || conf\n\n        _.chain(layers).filter((layer) => {\n          return layer.hasOwnProperty('connectedTo')\n        }).map((layer) => {\n          const layersConnectedTo = []\n          let layerConnectedObj, layerConnectedId, layerConnectedType\n\n          _.each(layer.connectedTo, (layerConnected) => {\n            layerConnectedId = _.isObject(layerConnected) ? layerConnected.id : layerConnected\n            layerConnectedType = _.isObject(layerConnected) && layerConnected.type\n              ? layerConnected.type : 'standard'\n\n            layerConnectedObj = _.where(layers, {\n              id: layerConnectedId,\n            })[0]\n\n            layersConnectedTo.push({\n              layer: layerConnectedObj,\n              type: layerConnectedType,\n            })\n          })\n\n          return {\n            connectedTo: layersConnectedTo,\n            layer,\n          }\n        }).each((connection) => {\n          drawConnection(connection)\n        }).value()\n\n        _.chain(layers).filter((layer) => {\n          return layer.items.length > 0\n        }).each((layer) => {\n          drawConnectionsIfAny(layer.items)\n        }).value()\n      }\n      const updateSvgHeight = () => {\n        const getBottomPointOfLayer = (layer) => {\n          return layer.y + layer.height\n        }\n        const bottomLayer = _.max(conf, getBottomPointOfLayer)\n        const bottomPoint = getBottomPointOfLayer(bottomLayer)\n        const bottomPointPxs = bottomPoint * config.heightSize + 20\n\n        svg.attr('height', bottomPointPxs)\n      }\n      const calcMaxUnityWidth = () => {\n        const bodyWidth = document.body.getBoundingClientRect().width\n\n        helpers.maxUnityWidth = Math.floor(bodyWidth / config.widthSize)\n      }\n      const drawLayersInContainer = function(layers, container, containerData) {\n        const widthSize = config.widthSize\n        const heightSize = config.heightSize\n        let layerG, layerNode, layerDims, layerText\n\n        layers = layers || conf\n        container = container || svg\n\n        _.each(layers, (layer, layerIndex) => {\n          const currentLayerId = `diagrams-layer-g-${layerGId++}`\n          let numberG\n\n          layerG = container.append('g').attr({\n            class: 'layer-node',\n            id: currentLayerId,\n            transform: `translate(${layer.x * widthSize}, ${layer.y * heightSize})`,\n          })\n\n          layer.layerG = layerG\n          layer.container = container\n          layer.containerData = containerData\n\n          layerDims = helpers.getFinalLayerDimensions(layer)\n          layerNode = layerG.append('g')\n\n          if (layer.conditional === true) {\n            layerNode.append('path').attr({\n              d: d.shapes.hexagon({\n                height: layerDims.height,\n                width: layerDims.width,\n                widthPercent: 97 + Math.abs(3 - layer.depth),\n              }),\n              fill: layerDims.fill,\n              stroke: '#f00',\n              transform: layerDims.transform,\n            })\n          } else {\n            layerNode.append('rect').attr({\n              fill: layerDims.fill,\n              height: layerDims.height,\n              transform: layerDims.transform,\n              width: layerDims.width,\n            }).style({\n              filter: 'url(#diagrams-drop-shadow-layer)',\n            })\n          }\n\n          layerText = layerNode.append('text').attr({\n            transform: layerDims.transform,\n            x: layer.depth,\n            y: layer.height * heightSize - 3 * layer.depth - 10,\n          }).text(() => {\n            return d.utils.formatShortDescription(layer.text)\n          })\n\n          layer.fullText = layer.text\n          // Missing to add show all layers connections and hide\n          diagram.addMouseListenersToEl(layerNode, layer)\n          layerText.each(d.svg.textEllipsis(layer.width * widthSize\n            - config.depthWidthFactor * layer.depth * 2))\n\n          if (layerDims.numberTransform) {\n            numberG = layerNode.append('g').attr({\n              class: 'number',\n              transform: layerDims.numberTransform,\n            })\n            numberG.append('circle').attr({\n              cx: 4,\n              cy: -4,\n              fill: colors[layer.depth - 1],\n              filter: 'none',\n              r: 10,\n              stroke: '#000',\n              'stroke-width': 2,\n            })\n            numberG.append('text').text(layerIndex + 1)\n              .attr('fill', '#000')\n          }\n\n          if (layer.items.length > 0) {\n            drawLayersInContainer(layer.items, layerG, layer)\n          }\n        })\n      }\n      const svg = d.svg.generateSvg({\n        margin: '20px 0 0 20px',\n      })\n\n      diagram.markRelatedFn = function(item) {\n        item.data.origFill = item.data.origFill || item.el.select('rect').style('fill')\n        item.el.select('rect').style({\n          fill: 'rgb(254, 255, 209)',\n        })\n      }\n      diagram.unmarkAllItems = function() {\n        const recursiveFn = (items) => {\n          _.each(items, (item) => {\n            item.layerG.style({\n              'stroke-width': '1px',\n            })\n\n            if (item.origFill) {\n              item.layerG.select('rect').style('fill', item.origFill)\n            }\n\n            if (item.items) recursiveFn(item.items)\n          })\n        }\n\n        recursiveFn(conf)\n      }\n\n      _.each(colors, (color, index) => {\n        d.svg.addVerticalGradientFilter(svg, `color-${index}`, ['#fff', color])\n      })\n\n      svg.attr('class', 'layers-diagram')\n\n      if (_.isArray(conf) === false) conf = [conf]\n      d.svg.addFilterColor({ container: svg, deviation: 3, id: 'layer', slope: 2 })\n\n      addItemsPropToBottomItems(conf)\n      calcMaxUnityWidth()\n      helpers.generateLayersData(conf)\n      drawLayersInContainer()\n      drawConnectionsIfAny()\n      updateSvgHeight()\n      diagram.generateRelationships(conf)\n    }\n\n    generateRelationships(layers, containerLayer) {\n      const diagram = this\n\n      _.each(layers, (layer) => {\n        diagram.generateEmptyRelationships(layer)\n        diagram.addSelfRelationship(layer, layer.layerG, layer)\n\n        if (containerLayer) {\n          diagram.addDependantRelationship(containerLayer, layer.layerG, layer)\n          diagram.addDependencyRelationship(layer, containerLayer.layerG, containerLayer)\n        }\n\n        if (layer.items && layer.items.length > 0) {\n          diagram.generateRelationships(layer.items, layer)\n        }\n      })\n    }\n  }\n\n  new Layer({\n    helpers,\n    name: 'layer',\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/diagrams/Layer/index.js\n **/","import d from 'diagrams'\n\nconst helpers = {\n  Grid: class Grid {\n    constructor(fixedWidth) {\n      this.position = {\n        x: 0,\n        y: 0,\n      }\n      this.width = fixedWidth\n      this.cells = []\n    }\n    addItemAtNewRow(item) {\n      const counter = 0\n\n      this.position.x = 0\n      while (counter < 1000) {\n        this.position.y += 1\n\n        if (this.itemFitsAtCurrentPos(item)) break\n      }\n      this.addItemAtCurrentPos(item)\n    }\n    addItemAtCurrentPos(item) {\n      this.addItemAtPos(item, this.position)\n    }\n    createRowIfNecessary(posY) {\n      if (_.isUndefined(this.cells[posY])) this.cells[posY] = []\n    }\n    addItemAtPos(item, pos) {\n      let row\n\n      item.x = pos.x\n      item.y = pos.y\n\n      for (let i = 0; i < item.height; i++) {\n        this.createRowIfNecessary(i + pos.y)\n        row = this.cells[i + pos.y]\n\n        for (let j = 0; j < item.width; j++) {\n          row[j + pos.x] = true\n        }\n      }\n      this.updatePosition()\n    }\n    updatePosition() {\n      let counter = 0\n\n      while (counter < 1000) {\n        this.position.x += 1\n\n        if (this.position.x === this.width) {\n          this.position.x = -1\n          this.position.y += 1\n          this.createRowIfNecessary(this.position.y)\n        } else if (this.cells[this.position.y][this.position.x] !== true) {\n          break\n        }\n        counter++\n      }\n    }\n    itemFitsAtPos(item, pos) {\n      let row\n\n      for (let i = 0; i < item.height; i++) {\n        row = this.cells[i + pos.y]\n\n        if (_.isUndefined(row)) return true\n\n        for (let j = 0; j < item.width; j++) {\n          if (row[j + pos.x] === true) return false\n\n          if ((j + pos.x + 1) > this.width) return false\n        }\n      }\n\n      return true\n    }\n    itemFitsAtCurrentPos(item) {\n      return this.itemFitsAtPos(item, this.position)\n    }\n    movePositionToNextRow() {\n      this.position.y++\n      this.position.x = 0\n      this.createRowIfNecessary(this.position.y)\n    }\n    lastRowIsEmpty() {\n      const rows = this.cells.length\n\n      for (let i = 0; i < this.width; i++) {\n        if (this.cells[rows - 1][i] === true) return false\n      }\n\n      return true\n    }\n    getSize() {\n      const rows = this.cells.length\n\n      return {\n        height: (this.lastRowIsEmpty()) ? rows - 1 : rows,\n        width: this.width,\n      }\n    }\n  },\n\n  calculateLayerWithChildrenDimensions(layer) {\n    let itemsOfLayer, grid, itemsOfLayerIndex, width, gridSize, itemsShouldBeSorted\n    let totalWidth = 0\n    let totalHeight = 0\n    let maxWidth = 0\n    let maxHeight = 0\n    let whileCounter = 0\n    const itemsArray = []\n    const addedItemToGrid = (index) => {\n      if (itemsOfLayer[index].inNewRow === true) {\n        grid.addItemAtNewRow(itemsOfLayer[index])\n        itemsOfLayer.splice(index, 1)\n\n        return true\n      } else if (grid.itemFitsAtCurrentPos(itemsOfLayer[index])) {\n        grid.addItemAtCurrentPos(itemsOfLayer[index])\n        itemsOfLayer.splice(index, 1)\n\n        return true\n      } else {\n        return false\n      }\n    }\n\n    _.each(layer.items, (item) => {\n      totalWidth += item.width\n      totalHeight += item.height\n      maxHeight = (item.height > maxHeight) ? item.height : maxHeight\n      maxWidth = (item.width > maxWidth) ? item.width : maxWidth\n      itemsArray.push(item)\n    })\n\n    if ((totalWidth / 2) >= maxWidth) {\n      if (totalHeight > totalWidth) {\n        if (totalHeight / 2 < layer.items.length) width = Math.ceil(totalWidth / 2)\n        else width = totalWidth\n      } else width = Math.ceil(totalWidth / 2)\n    } else width = maxWidth\n\n    width = (helpers.maxUnityWidth < width) ? helpers.maxUnityWidth : width\n\n    grid = new helpers.Grid(width)\n\n    itemsShouldBeSorted = helpers.itemsOfLayerShouldBeSorted(itemsArray)\n\n    if (itemsShouldBeSorted) {\n      itemsOfLayer = itemsArray.sort((itemA, itemB) => {\n        if (itemA.width === itemB.width) {\n          return itemA.height < itemB.height\n        } else {\n          return itemA.width < itemB.width\n        }\n      })\n    } else itemsOfLayer = itemsArray\n    addedItemToGrid(0)\n    itemsOfLayerIndex = 0\n    while (itemsOfLayer.length > 0 && whileCounter < 1000) {\n      if (addedItemToGrid(itemsOfLayerIndex)) {\n        itemsOfLayerIndex = 0\n      } else {\n        if (itemsShouldBeSorted) {\n          itemsOfLayerIndex++\n\n          if (itemsOfLayerIndex === itemsOfLayer.length) {\n            itemsOfLayerIndex = 0\n            grid.movePositionToNextRow()\n          }\n        } else {\n          grid.movePositionToNextRow()\n        }\n      }\n      whileCounter++\n    }\n\n    gridSize = grid.getSize()\n    // This two values only persist if the layer is a top one\n    layer.x = 0\n    layer.y = 0\n    layer.width = gridSize.width\n    layer.height = (layer.items.length > 0) ? gridSize.height + 1 : gridSize.height\n  },\n\n  config: {\n    depthHeightFactor: 2,\n    depthWidthFactor: 4,\n    heightSize: 60,\n    showNumbersAll: false,\n    widthSize: 350,\n  },\n\n  connectWithOpt(ids, result, type) {\n    const objs = []\n\n    if (_.isNumber(ids)) ids = [ids]\n    type = type || 'standard'\n\n    _.each(ids, (id) => {\n      objs.push({\n        id: `layer-${id}-custom`,\n        type,\n      })\n    })\n\n    if (_.isUndefined(result.connectedTo) === true) result.connectedTo = objs\n    else result.connectedTo = result.connectedTo.concat(objs)\n  },\n\n  connectWithOptAndIdOpt(ids, id) {\n    const connectWithOpt = d.layer.connectWithOpt(ids)\n    const idOpt = d.layer.idOpt(id)\n\n    return _.extend(connectWithOpt, idOpt)\n  },\n\n  dataFromGeneralToSpecific(generalData) {\n    return d.utils.dataFromGeneralToSpecificForATreeStructureType(generalData)\n  },\n\n  dataFromSpecificToGeneral(conf) {\n    let maxId = -1\n    const finalItems = []\n    const connections = []\n    const recursiveFn = (items, parentCreatedItem) => {\n      _.each(items, (item) => {\n        const firstOccurrence = /(\\. |:)/.exec(item.fullText)\n        let name, description, splittedText, createdItem\n\n        if (firstOccurrence) {\n          splittedText = item.fullText.split(firstOccurrence[0])\n          name = splittedText[0]\n          description = splittedText.slice(1).join(firstOccurrence)\n        }\n        createdItem = {\n          description: description || null,\n          graphsData: {\n            layer: {\n              id: item.id,\n              relationships: item.options,\n            },\n          },\n          id: ++maxId,\n          name: name || item.fullText,\n        }\n        finalItems.push(createdItem)\n\n        if (parentCreatedItem) {\n          connections.push({\n            from: createdItem.id,\n            to: parentCreatedItem.id,\n          })\n        }\n\n        if (item.items && item.items.length > 0) recursiveFn(item.items, createdItem)\n      })\n    }\n\n    recursiveFn([conf])\n\n    return {\n      connections,\n      items: finalItems,\n    }\n  },\n\n  extendOpts() {\n    let result = {}\n\n    _.each(arguments, (arg) => {\n      if (typeof(arg) === 'string') {\n        _.each(arg.split(' '), (opt) => {\n          if (opt.substr(0, 3) === 'id-')\n            result = _.extend(result, helpers.idOpt(opt.substr(3, opt.length)))\n          else if (opt.substr(0, 3) === 'ct-')\n            helpers.connectWithOpt(Number(opt.substr(3, opt.length)), result)\n          else if (opt.substr(0, 4) === 'ctd-')\n            helpers.connectWithOpt(Number(opt.substr(4, opt.length)), result, 'dashed')\n          else result = _.extend(result, helpers.staticOptsLetters[opt])\n        })\n      } else if (_.isObject(arg)) {\n        result = _.extend(result, arg)\n      }\n    })\n\n    return result\n  },\n\n  generateLayersData(layers, currentDepth) {\n    const config = helpers.config\n    let maxDepth, itemsDepth\n\n    currentDepth = currentDepth || 1\n    maxDepth = currentDepth\n    _.each(layers, (layer, layerIndex) => {\n      if (layer.showNumbersAll === true) config.showNumbersAll = true\n      layer.depth = currentDepth\n      helpers.handleConnectedToNextCaseIfNecessary(layers, layerIndex)\n\n      if (layer.items.length > 0) {\n        itemsDepth = helpers.generateLayersData(layer.items, (currentDepth + 1))\n        layer.maxLayerDepthBelow = itemsDepth - currentDepth\n        helpers.calculateLayerWithChildrenDimensions(layer)\n        maxDepth = (maxDepth < itemsDepth) ? itemsDepth : maxDepth\n      } else {\n        layer.maxLayerDepthBelow = 0\n        layer.width = 1\n        layer.height = 1\n        maxDepth = (maxDepth < itemsDepth) ? itemsDepth : maxDepth\n      }\n      layer.alreadyConnections = []\n    })\n\n    return maxDepth\n  },\n\n  getFinalLayerDimensions(layer) {\n    const config = helpers.config\n    const height = layer.height * config.heightSize - config.depthHeightFactor * layer.depth * 2\n    const width = layer.width * config.widthSize - config.depthWidthFactor * layer.depth * 2\n    const transform = `translate(${config.depthWidthFactor * layer.depth},`\n      + `${config.depthHeightFactor * layer.depth})`\n    const fill = `url(#color-${String(layer.depth - 1)})`\n    const dimensions = { fill, height, transform, width }\n\n    if (config.showNumbersAll === true || (layer.containerData\n      && layer.containerData.showNumbers === true)) {\n      dimensions.numberTransform = `translate(`\n        + `${String(width - 15 + config.depthWidthFactor * layer.depth)},`\n        + `${String(config.depthHeightFactor * layer.depth + height + 0)})`\n    }\n\n    return dimensions\n  },\n\n  handleConnectedToNextCaseIfNecessary(layers, currentIndex) {\n    const layer = layers[currentIndex]\n    const nextLayer = layers[currentIndex + 1]\n    let connectedTo, newId\n\n    if (layer.hasOwnProperty('connectedWithNext') === true && nextLayer) {\n      if (nextLayer.id) newId = nextLayer.id\n      else {\n        newId = `to-next-${String(++helpers.ids)}`\n        nextLayer.id = newId\n      }\n\n      if (_.isObject(layer.connectedWithNext) && layer.connectedWithNext.type) {\n        connectedTo = {\n          id: newId,\n          type: layer.connectedWithNext.type,\n        }\n      } else connectedTo = newId\n\n      if (layer.connectedTo) layer.connectedTo.push(connectedTo)\n      else layer.connectedTo = [connectedTo]\n    }\n  },\n\n  idOpt(id) {\n    return {\n      id: `layer-${id}-custom`,\n    }\n  },\n\n  ids: 0,\n\n  itemsOfLayerShouldBeSorted(itemsArray) {\n    let ret = true\n\n    _.each(itemsArray, (item) => {\n      if (item.hasOwnProperty('connectedTo')) ret = false\n\n      if (item.hasOwnProperty('connectToNext')) ret = false\n    })\n\n    return ret\n  },\n\n  newLayer(text, opts, items) {\n    let layer = { text }\n\n    if (_.isArray(opts)) items = opts\n    else {\n      if (_.isString(opts)) opts = helpers.extendOpts(opts)\n\n      if (_.isObject(opts)) layer = _.extend(layer, opts)\n    }\n\n    if (items) layer.items = items\n\n     // Have to limit the id by the two sides to enable .indexOf to work\n    if (_.isUndefined(layer.id)) layer.id = `layer-${++helpers.ids}-auto`\n\n    return layer\n  },\n\n  newLayerConnectedToNext() {\n    const args = arguments.length\n\n    if (args === 1) return helpers.newLayer(arguments[0], 'cn')\n    else if (args === 2) {\n      if (typeof(arguments[1]) === 'object')\n        return helpers.newLayer(arguments[0], 'cn', arguments[1])\n      else if (typeof(arguments[1] === 'string'))\n        return helpers.newLayer(arguments[0], `${arguments[1]} cn`)\n    } else if (args === 3)\n      return helpers.newLayer(arguments[0], `${arguments[1]} cn`, arguments[2])\n  },\n\n  staticOptsLetters: {\n    cn: {\n      connectedWithNext: true,\n    },\n    cnd: {\n      connectedWithNext: {\n        type: 'dashed',\n      },\n    },\n    co: {\n      conditional: true,\n    },\n    nr: {\n      inNewRow: true,\n    },\n    sn: {\n      showNumbers: true,\n    },\n    sna: {\n      showNumbersAll: true,\n    },\n  },\n\n}\n\n_.each([\n  'newLayer',\n  'newLayerConnectedToNext',\n], (helpersMethod) => {\n  helpers[`${helpersMethod}WithCode`] = (codeLanguage) => {\n    const codeFn = d.utils.codeBlockOfLanguageFn(codeLanguage)\n\n    return function() {\n      const args = arguments\n\n      args[0] = codeFn(args[0])\n\n      return helpers[helpersMethod].apply(this, args)\n    }\n  }\n\n  helpers[`${helpersMethod}WithParagraphAndCode`] = (codeLanguage) => {\n    const codeFn = d.utils.codeBlockOfLanguageFn(codeLanguage)\n\n    return function() {\n      let args = [].splice.call(arguments, 0)\n      const paragraphText = args[0]\n      const code = args[1]\n      const text = d.utils.wrapInParagraph(paragraphText) + codeFn(code)\n\n      args = args.splice(2)\n      args.unshift(text)\n\n      return helpers[helpersMethod].apply(this, args)\n    }\n  }\n})\n\nexport default helpers\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/diagrams/Layer/helpers.js\n **/"],"sourceRoot":""}